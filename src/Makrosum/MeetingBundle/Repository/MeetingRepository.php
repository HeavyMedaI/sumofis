<?php

namespace Makrosum\MeetingBundle\Repository;
use Makrosum\MeetingBundle\Abstractions\MakrosumRepository;
use Makrosum\MeetingBundle\Entity\Company;
use Makrosum\MeetingBundle\Entity\Permission;
use Makrosum\MeetingBundle\Entity\User;
use Makrosum\MeetingBundle\Entity\MeetingMember;
use Makrosum\MeetingBundle\MeetingBundle;

/**
 * MeetingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MeetingRepository extends MakrosumRepository
{
    public function findAllMeetingsRelatedToMe(User $user, Permission $permission, Company $company)
    {
        $Meetings = [];

        if($company->isOwner($user)){
            $Meetings = $this->findBy([
                "company" => $company->getId(),
            ]);
        }else{
            /*$Permission = $this->getRepository(Permission::class)->findOneBy([
                "user" => $user->getId(),
                "company" => $company->getId()
            ]);*/
            if($permission->isGranted(MeetingBundle::GRANTED_SUPER_MEETING)){
                $Meetings = $this->findBy([
                    "company" => $company->getId(),
                ]);
            }else if($permission->isGranted(MeetingBundle::GRANTED_DELETE_MEETING)){
                $Meetings = $this->findBy([
                    "company" => $company->getId(),
                ]);
            }else if($permission->isGranted(MeetingBundle::GRANTED_EDIT_MEETING)){
                $Meetings = $this->findBy([
                    "company" => $company->getId(),
                ]);
            }else if($permission->isGranted(MeetingBundle::GRANTED_STATUS_MEETING)){
                $Meetings = $this->findBy([
                    "company" => $company->getId(),
                ]);
            }else{
                $MyMeetingList = $this->getRepository(MeetingMember::class)->findBy([
                    "user" => $user->getId()
                ]);
                foreach($MyMeetingList as $MyMeeting){
                    $Meetings[] = $this->find($MyMeeting->getMeeting());
                }
            }
        }

        return $Meetings;

    }
}
